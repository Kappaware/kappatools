/*
 * Copyright (C) 2016 BROADSoftware
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

defaultTasks 'fatJar'

dependencies {
	compile "org.slf4j:slf4j-log4j12:$sl4jLog4jVersion"
    compile "log4j:log4j:$log4jVersion"
    compile "net.sf.jopt-simple:jopt-simple:$joptVersion"
    compile "org.eclipse.jetty:jetty-servlet:$jettyVersion"
    compile project(':kcommon')
    testCompile "junit:junit:$junitVersion"
    testCompile "info.batey.kafka:kafka-unit:$kafkaUnitVersion"
    testCompile "org.eclipse.jetty:jetty-client:$jettyVersion"
    
}

jar {
	exclude("log4j.xml")
	rename("log4j-jar.xml", "log4j.xml")
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'king', 
        	'Implementation-Version': version,
        	'Main-Class': 'com.kappaware.king.Main'
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

// To launch as: ./run.sh main arg1 arg2 ..
task run_main(type: JavaExec) {
	dependsOn classes
	description = "Main Command launcher"
	main = "com.kappaware.king.Main"
	classpath sourceSets.main.runtimeClasspath
	if ( project.hasProperty("runArgs") ) {
		args Eval.me(runArgs)	
	}
}


