/*
 * Copyright (C) 2016 BROADSoftware
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
defaultTasks 'fatJar'
 

dependencies {
 	compile 'org.slf4j:slf4j-log4j12:1.7.21'
    compile 'log4j:log4j:1.2.14'
    compile 'net.sf.jopt-simple:jopt-simple:5.0.1'
    compile project(':kcommon')
    testCompile 'junit:junit:4.12'
}


jar {
	exclude("log4j.xml")
	rename("log4j-jar.xml", "log4j.xml")
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'kcons', 
        	'Implementation-Version': version,
        	'Main-Class': 'com.kappaware.kcons.Main'
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


// To launch as: ./run.sh main arg1 arg2 ..
task run_main(type: JavaExec) {
	dependsOn classes
	description = "Main Command launcher"
	main = "com.kappaware.kcons.Main"
	standardInput = System.in
	classpath sourceSets.main.runtimeClasspath
	if ( project.hasProperty("runArgs") ) {
		args Eval.me(runArgs)	
	}
}


